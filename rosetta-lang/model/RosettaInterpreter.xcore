@Ecore(nsURI="http://www.rosetta-model.com/RosettaInterpreter")
@GenModel(fileExtensions="rosetta", modelDirectory="/com.regnosys.rosetta/emf-gen/main/java", operationReflection="false",
	copyrightText="Copyright (c) REGnosys 2017 (www.regnosys.com)", forceOverwrite="true", updateClasspath="false",
	complianceLevel="8.0", bundleManifest="false", modelPluginID="")

package com.regnosys.rosetta.rosetta.interpreter

import com.regnosys.rosetta.rosetta.expression.RosettaBooleanLiteral
import com.regnosys.rosetta.rosetta.expression.RosettaStringLiteral
import com.regnosys.rosetta.rosetta.expression.RosettaNumberLiteral
import com.regnosys.rosetta.rosetta.expression.RosettaPatternLiteral
import com.regnosys.rosetta.rosetta.expression.RosettaIntLiteral
import com.regnosys.rosetta.rosetta.expression.ListLiteral
import com.regnosys.rosetta.rosetta.expression.RosettaConditionalExpression
import com.regnosys.rosetta.rosetta.expression.LogicalOperation
import com.regnosys.rosetta.rosetta.expression.EqualityOperation
import com.regnosys.rosetta.rosetta.expression.ComparisonOperation

import com.regnosys.rosetta.rosetta.expression.RosettaSymbolReference
import com.regnosys.rosetta.rosetta.RosettaInterpreterBaseEnvironment
import com.regnosys.rosetta.rosetta.expression.ArithmeticOperation
import com.regnosys.rosetta.rosetta.expression.RosettaContainsExpression
import com.regnosys.rosetta.rosetta.expression.RosettaDisjointExpression
import com.regnosys.rosetta.rosetta.expression.JoinOperation
import com.regnosys.rosetta.rosetta.expression.RosettaExistsExpression
import com.regnosys.rosetta.rosetta.expression.RosettaAbsentExpression
import com.regnosys.rosetta.rosetta.expression.RosettaCountOperation
import com.regnosys.rosetta.rosetta.expression.FirstOperation
import com.regnosys.rosetta.rosetta.expression.LastOperation
import com.regnosys.rosetta.rosetta.expression.DistinctOperation
import com.regnosys.rosetta.rosetta.expression.ReverseOperation
import com.regnosys.rosetta.rosetta.expression.SumOperation
import com.regnosys.rosetta.rosetta.RosettaInterpreterTuple

class RosettaInterpreterBaseError{
	String message
}

abstract class RosettaInterpreterValue {
}

interface InterpreterVisitor {	
	
	op RosettaInterpreterTuple interp (RosettaBooleanLiteral exp, RosettaInterpreterBaseEnvironment env)
	op RosettaInterpreterTuple interp (RosettaStringLiteral exp, RosettaInterpreterBaseEnvironment env)
	op RosettaInterpreterTuple interp (RosettaNumberLiteral exp, RosettaInterpreterBaseEnvironment env)
	op RosettaInterpreterTuple interp (RosettaIntLiteral exp, RosettaInterpreterBaseEnvironment env)
	op RosettaInterpreterTuple interp (RosettaPatternLiteral exp, RosettaInterpreterBaseEnvironment env)
	op RosettaInterpreterTuple interp (ListLiteral exp, RosettaInterpreterBaseEnvironment env)
	op RosettaInterpreterTuple interp (RosettaConditionalExpression exp, RosettaInterpreterBaseEnvironment env)
	op RosettaInterpreterTuple interp (LogicalOperation exp, RosettaInterpreterBaseEnvironment env)
	op RosettaInterpreterTuple interp (EqualityOperation exp, RosettaInterpreterBaseEnvironment env)
	op RosettaInterpreterTuple interp (ComparisonOperation exp, RosettaInterpreterBaseEnvironment env)
	op RosettaInterpreterTuple interp (ArithmeticOperation exp, RosettaInterpreterBaseEnvironment env)	
	op RosettaInterpreterTuple interp (RosettaSymbolReference exp, RosettaInterpreterBaseEnvironment env)

	op RosettaInterpreterTuple interp (RosettaContainsExpression exp, RosettaInterpreterBaseEnvironment env)	
	op RosettaInterpreterTuple interp (RosettaDisjointExpression exp, RosettaInterpreterBaseEnvironment env)	
	op RosettaInterpreterTuple interp (JoinOperation exp, RosettaInterpreterBaseEnvironment env)	
	op RosettaInterpreterTuple interp (RosettaExistsExpression exp, RosettaInterpreterBaseEnvironment env)	
	op RosettaInterpreterTuple interp (RosettaAbsentExpression exp, RosettaInterpreterBaseEnvironment env)	
	op RosettaInterpreterTuple interp (RosettaCountOperation exp, RosettaInterpreterBaseEnvironment env)	
	op RosettaInterpreterTuple interp (FirstOperation exp, RosettaInterpreterBaseEnvironment env)	
	op RosettaInterpreterTuple interp (LastOperation exp, RosettaInterpreterBaseEnvironment env)
	op RosettaInterpreterTuple interp (DistinctOperation exp, RosettaInterpreterBaseEnvironment env)
	op RosettaInterpreterTuple interp (ReverseOperation exp, RosettaInterpreterBaseEnvironment env)
	op RosettaInterpreterTuple interp (SumOperation exp, RosettaInterpreterBaseEnvironment env)
	
	
}